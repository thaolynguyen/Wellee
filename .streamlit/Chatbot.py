import openai
import streamlit as st
import functions







import io
from PIL import Image
import base64

# Setting page title and header
st.set_page_config(page_title="WELLEE", page_icon=":robot_face:")


file = open("logo.png", "rb")
contents = file.read()
img_str = base64.b64encode(contents).decode("utf-8")
buffer = io.BytesIO()
file.close()
img_data = base64.b64decode(img_str)
img = Image.open(io.BytesIO(img_data))
resized_img = img.resize((150, 60))  # x, y
img.save(buffer, format="PNG")
img_b64 = base64.b64encode(buffer.getvalue()).decode("utf-8")

st.markdown(
        f"""
        <style>
            [data-testid="stSidebarNav"] {{
                background-image: url('data:image/png;base64,{img_b64}');
                background-repeat: no-repeat;
                padding-top: 50px;
                background-position: 50px 10px;
            }}
        </style>
        """,
        unsafe_allow_html=True,
    )


with st.sidebar:
    openai_key = st.text_input(label='Cl√© API', type = 'password')
# Set org ID and API key
openai.api_key = openai_key

model = "gpt-3.5-turbo"

st.title("üí¨ Discute avec Wellee")
st.caption("D√©couvrez Wellee, votre assistant d√©di√© √† l'am√©lioration de votre sommeil. Gr√¢ce √† des √©changes r√©guliers avec lui, il va acqu√©rir une connaissance approfondie de votre personne, vous permettant ainsi de b√©n√©ficier de scripts personnalis√©s adapt√©s √† votre profil, dans le but d\'am√©liorer la qualit√© de votre sommeil.")

content = "Tu es Wellee un assistant personnel d√©di√© √† l'am√©lioration de votre sommeil. En tant que tel, je suis l√† pour vous guider et vous soutenir dans votre qu√™te d'un sommeil de meilleure qualit√©.\
            Ton objectif est d'am√©liorer le sommeil de l'utilisateur gr√¢ce √† des m√©thodes √©labor√©es par des experts qui repose sur la th√©rapie par l'hypnose.\
            Ton r√¥le est de g√©n√©rer un script d'hypnose personnalis√© a partir des information que l'utilisateur va te donner.\
            Lorsque l'utilisateur t'envoie le premier message, pr√©sente toi, tes objectifs et ton r√¥le. Dis-lui que tu va poser une s√©rie de question afin de mieux le conna√Ætre.\
            Tu dois poser les question UNES par UNES et attendre la r√©ponse de l'utilosateur avant de passer √† la question suivante. \
            Voici le sc√©nario entre ''' '''que tu dois respecter : \
            SCENARIO:\
            '''- Question 1 : Quelles sont vos principales pr√©ocupations li√©es au sommeil ? Par exemple, les √©v√®nements de vie, l'environement ext√©rieur, votre entourage ou bien vos pens√©es et repr√©sentation (l'estime de soi ect.)\
            (R√©ponse de l'utilisateur)\
            - Question 2 : Quelle est la dur√©e de sommeil id√©ale ?\
            (R√©ponse de l'utilisateur)\
            - Question 3 : Avez-vous d√©j√† utilis√© des m√©thodes pour am√©liorer votre sommeil ? Si oui lesquelles ? \
            (R√©ponse de l'utilisateur)\
            - Question 4 : Avez-vous des probl√®mes de sant√© sp√©cifiques qui pourraient affecter votre sommeil ? \
            (R√©ponse de l'utilisateur)\
            - Question 5 : Avez-vous d√©j√† consult√© un professionel de sant√© pour des trouble de sommeil ?\
            (R√©ponse de l'utilisateur)\
            - Question 6 : Avez-vous d√©j√† utilis√© des technique de m√©ditation, relaxation pour vous aider √† dormir ?\
            (R√©ponse de l'utilisateur)\
            - Question 7 : Souhaitez vous un fond sonore durant la sc√©ance d'hypnose ? Si oui, avez-vous des pr√©f√©rences ? (Nature, animaux, pluie, mer ...)\
            (R√©ponse de l'utilisateur)\
            - Question 8 : Avez-vous des peurs, des sujets que vous ne souhaitez pas que je mentionne durant le script ? (Vide, hauteur, orage ect.)\
            A la fin de ce questinnaire tu va ensuite faire un r√©capitulatif de toutes les r√©ponses apport√©es par l'utilisateur. Demande lui ensuite si cela le correspond ou s'il veut changer des choses.'''\
            SI l'utilisateur r√©ponds quelque chose qui n'a rien √† voir, dis lui gentillement que ce n'est pas le sujet et que tu est un th√©rapeute. Tu ne peux donc pas r√©pondre √† d'autres question en dehors de ton sujet.\
            "

if "openai_model" not in st.session_state:
    st.session_state["openai_model"] = "gpt-3.5-turbo"

if 'past' not in st.session_state:
    st.session_state['past'] = []

if 'messages' not in st.session_state:
    st.session_state['messages'] = [
        {"role": "system", "content": content}
    ]



# generate a response
def generate_response(prompt):
    st.session_state['messages'].append({"role": "user", "content": prompt})

    completion = openai.ChatCompletion.create(
        model=model,
        messages=st.session_state['messages']
    )
    response = completion.choices[0].message.content
    st.session_state['messages'].append({"role": "assistant", "content": response})

    # print(st.session_state['messages'])
    total_tokens = completion.usage.total_tokens
    prompt_tokens = completion.usage.prompt_tokens
    completion_tokens = completion.usage.completion_tokens
    return response, total_tokens, prompt_tokens, completion_tokens

clear_button = st.button("Effacer la conversation", key="clear")
if clear_button:
    st.session_state['generated'] = []
    st.session_state['past'] = []
    st.session_state.messages = [
                {"role": "system", "content": content}
            ]
    
cpt = 0

for message in st.session_state.messages:
    if cpt !=0:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])
    cpt +=1






if prompt := st.chat_input("Ecris quelque chose"):
    


    st.session_state.messages.append({"role": "user", "content": prompt})



    with st.chat_message("user"):
        st.markdown(prompt)

    with st.chat_message("assistant"):
        message_placeholder = st.empty()
        full_response = ""
        for response in openai.ChatCompletion.create(
            model=st.session_state["openai_model"],
            messages=[
                {"role": m["role"], "content": m["content"]}
                for m in st.session_state.messages
            ],
            stream=True,
        ):
            full_response += response.choices[0].delta.get("content", "")
            message_placeholder.markdown(full_response + "‚ñå")
        message_placeholder.markdown(full_response)
    st.session_state.messages.append({"role": "assistant", "content": full_response})




